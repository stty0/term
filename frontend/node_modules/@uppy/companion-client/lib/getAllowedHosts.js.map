{"version":3,"names":["getAllowedHosts","hosts","url","Array","isArray","RegExp","TypeError","test","replace","URL","origin"],"sources":["getAllowedHosts.ts"],"sourcesContent":["export default function getAllowedHosts(\n  hosts: string | RegExp | Array<string | RegExp> | undefined,\n  url: string,\n): string | RegExp | Array<string | RegExp> {\n  if (hosts) {\n    if (\n      typeof hosts !== 'string' &&\n      !Array.isArray(hosts) &&\n      !(hosts instanceof RegExp)\n    ) {\n      throw new TypeError(\n        `The option \"companionAllowedHosts\" must be one of string, Array, RegExp`,\n      )\n    }\n    return hosts\n  }\n  // does not start with https://\n  if (/^(?!https?:\\/\\/).*$/i.test(url)) {\n    return `https://${url.replace(/^\\/\\//, '')}`\n  }\n  return new URL(url).origin\n}\n"],"mappings":"AAAA,eAAe,SAASA,eAAeA,CACrCC,KAA2D,EAC3DC,GAAW,EAC+B;EAC1C,IAAID,KAAK,EAAE;IACT,IACE,OAAOA,KAAK,KAAK,QAAQ,IACzB,CAACE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IACrB,EAAEA,KAAK,YAAYI,MAAM,CAAC,EAC1B;MACA,MAAM,IAAIC,SAAS,CAChB,yEACH,CAAC;IACH;IACA,OAAOL,KAAK;EACd;EACA;EACA,IAAI,sBAAsB,CAACM,IAAI,CAACL,GAAG,CAAC,EAAE;IACpC,OAAQ,WAAUA,GAAG,CAACM,OAAO,CAAC,OAAO,EAAE,EAAE,CAAE,EAAC;EAC9C;EACA,OAAO,IAAIC,GAAG,CAACP,GAAG,CAAC,CAACQ,MAAM;AAC5B"}